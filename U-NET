{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPkphnVlpqFFtkngrW8fn+W",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ridash2005/Pancreati-Tumor-Segmentation/blob/main/U-NET\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rjv1VNLvXaqi",
        "outputId": "8c978a2b-f8f6-458b-dd8f-358a723ca53f"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "\n",
        "# List files in MyDrive\n",
        "os.listdir(\"/content/drive/MyDrive\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gdw4kzwNYTCP",
        "outputId": "4e0ad98a-b7b9-4575-9dc9-8ff4ef7964d5"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Colab Notebooks',\n",
              " 'Assignment 2 Q3 CMH .pptx',\n",
              " 'Assignment 2 Q2 CMH .pptx',\n",
              " 'Assignment 2 Q1 CMH.pptx',\n",
              " 'Google AI Studio',\n",
              " 'Resume Rickarya Das.gdoc',\n",
              " 'Resume Rickarya Das.pdf',\n",
              " 'Resume Rickarya Das1.gdoc',\n",
              " 'Institute ID.jpg',\n",
              " 'PIS']"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install torch torchvision matplotlib pydicom\n",
        "import zipfile, pydicom, io, numpy as np\n",
        "from PIL import Image\n",
        "from torch.utils.data import Dataset, DataLoader\n",
        "from torchvision import transforms\n",
        "from sklearn.model_selection import train_test_split\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Au1MqeQsbH2C",
        "outputId": "6ed38864-0516-420c-cbeb-4fd6853eea9f"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: torch in /usr/local/lib/python3.12/dist-packages (2.8.0+cu126)\n",
            "Requirement already satisfied: torchvision in /usr/local/lib/python3.12/dist-packages (0.23.0+cu126)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.12/dist-packages (3.10.0)\n",
            "Requirement already satisfied: pydicom in /usr/local/lib/python3.12/dist-packages (3.0.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.12/dist-packages (from torch) (3.19.1)\n",
            "Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.12/dist-packages (from torch) (4.15.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.12/dist-packages (from torch) (75.2.0)\n",
            "Requirement already satisfied: sympy>=1.13.3 in /usr/local/lib/python3.12/dist-packages (from torch) (1.13.3)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.12/dist-packages (from torch) (3.5)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.12/dist-packages (from torch) (3.1.6)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.12/dist-packages (from torch) (2025.3.0)\n",
            "Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch) (12.6.77)\n",
            "Requirement already satisfied: nvidia-cuda-runtime-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch) (12.6.77)\n",
            "Requirement already satisfied: nvidia-cuda-cupti-cu12==12.6.80 in /usr/local/lib/python3.12/dist-packages (from torch) (12.6.80)\n",
            "Requirement already satisfied: nvidia-cudnn-cu12==9.10.2.21 in /usr/local/lib/python3.12/dist-packages (from torch) (9.10.2.21)\n",
            "Requirement already satisfied: nvidia-cublas-cu12==12.6.4.1 in /usr/local/lib/python3.12/dist-packages (from torch) (12.6.4.1)\n",
            "Requirement already satisfied: nvidia-cufft-cu12==11.3.0.4 in /usr/local/lib/python3.12/dist-packages (from torch) (11.3.0.4)\n",
            "Requirement already satisfied: nvidia-curand-cu12==10.3.7.77 in /usr/local/lib/python3.12/dist-packages (from torch) (10.3.7.77)\n",
            "Requirement already satisfied: nvidia-cusolver-cu12==11.7.1.2 in /usr/local/lib/python3.12/dist-packages (from torch) (11.7.1.2)\n",
            "Requirement already satisfied: nvidia-cusparse-cu12==12.5.4.2 in /usr/local/lib/python3.12/dist-packages (from torch) (12.5.4.2)\n",
            "Requirement already satisfied: nvidia-cusparselt-cu12==0.7.1 in /usr/local/lib/python3.12/dist-packages (from torch) (0.7.1)\n",
            "Requirement already satisfied: nvidia-nccl-cu12==2.27.3 in /usr/local/lib/python3.12/dist-packages (from torch) (2.27.3)\n",
            "Requirement already satisfied: nvidia-nvtx-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch) (12.6.77)\n",
            "Requirement already satisfied: nvidia-nvjitlink-cu12==12.6.85 in /usr/local/lib/python3.12/dist-packages (from torch) (12.6.85)\n",
            "Requirement already satisfied: nvidia-cufile-cu12==1.11.1.6 in /usr/local/lib/python3.12/dist-packages (from torch) (1.11.1.6)\n",
            "Requirement already satisfied: triton==3.4.0 in /usr/local/lib/python3.12/dist-packages (from torch) (3.4.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.12/dist-packages (from torchvision) (2.0.2)\n",
            "Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.12/dist-packages (from torchvision) (11.3.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (1.3.3)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (4.59.1)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (1.4.9)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (25.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (3.2.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (2.9.0.post0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n",
            "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.12/dist-packages (from sympy>=1.13.3->torch) (1.3.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.12/dist-packages (from jinja2->torch) (3.0.2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import zipfile, os\n",
        "\n",
        "zip_path = '/content/drive/MyDrive/PIS/DCM.zip'\n",
        "z = zipfile.ZipFile(zip_path)\n",
        "\n",
        "# List all image DICOM slice file paths\n",
        "img_slice_paths = [\n",
        "    f for f in z.namelist()\n",
        "    if f.startswith('DCM/Task1/ImagesTr/') and f.lower().endswith('.dcm')\n",
        "]\n",
        "\n",
        "# Extract folders (patient/volume IDs) as f.split('/')[3]\n",
        "folders = sorted(set(f.split('/')[3] for f in img_slice_paths))\n",
        "print('Folders found:', folders)\n",
        "\n",
        "img_files, lbl_files = [], []\n",
        "for folder in folders:\n",
        "    imgs = sorted([\n",
        "        f for f in img_slice_paths\n",
        "        if f.startswith(f'DCM/Task1/ImagesTr/{folder}/IMG') and f.lower().endswith('.dcm')\n",
        "    ])\n",
        "    lbls = sorted([\n",
        "        f for f in z.namelist()\n",
        "        if f.startswith(f'DCM/Task1/LabelsTr/{folder}/IMG') and f.lower().endswith('.dcm')\n",
        "    ])\n",
        "\n",
        "    # Pair by basename\n",
        "    img_dict = {os.path.basename(f): f for f in imgs}\n",
        "    lbl_dict = {os.path.basename(f): f for f in lbls}\n",
        "    for fname in img_dict:\n",
        "        if fname in lbl_dict:\n",
        "            img_files.append(img_dict[fname])\n",
        "            lbl_files.append(lbl_dict[fname])\n",
        "\n",
        "print(f'Total number of paired slices: {len(img_files)}')\n",
        "print('Sample image:', img_files[:150])\n",
        "print('Sample mask :', lbl_files[:150])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jY1MLB4Ghwsp",
        "outputId": "40746446-cfb2-471c-88cc-a6b04251a481"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Folders found: ['10000', '10001', '10002', '10006', '10007', '10011', '10012', '10014', '10015', '10016', '10017', '10018', '10019', '10021', '10023', '10025', '10026', '10027', '10028', '10029', '10030', '10031', '10032', '10033', '10034', '10037', '10038', '10039', '10040', '10041', '10042', '10044', '10046', '10047', '10048', '10049', '10050', '10051', '10053', '10054', '10055', '10057', '10058', '10059', '10060', '10061', '10063', '10066', '10067', '10068', '10070', '10072', '10074', '10075', '10077', '10078', '10080', '10083', '10084', '10085', '10087', '10088', '10089', '10090', '10091', '10092', '10093', '10094', '10095', '10099', '10100', '10102', '10103', '10105', '10106', '10108', '10110', '10112', '10113', '10115', '10116', '10117', '10118', '10120', '10121', '10123', '10125', '10128', '10129', '10131', '10132', '10133']\n",
            "Total number of paired slices: 6816\n",
            "Sample image: ['DCM/Task1/ImagesTr/10000/IMG0001.dcm', 'DCM/Task1/ImagesTr/10000/IMG0002.dcm', 'DCM/Task1/ImagesTr/10000/IMG0003.dcm', 'DCM/Task1/ImagesTr/10000/IMG0004.dcm', 'DCM/Task1/ImagesTr/10000/IMG0005.dcm', 'DCM/Task1/ImagesTr/10000/IMG0006.dcm', 'DCM/Task1/ImagesTr/10000/IMG0007.dcm', 'DCM/Task1/ImagesTr/10000/IMG0008.dcm', 'DCM/Task1/ImagesTr/10000/IMG0009.dcm', 'DCM/Task1/ImagesTr/10000/IMG0010.dcm', 'DCM/Task1/ImagesTr/10000/IMG0011.dcm', 'DCM/Task1/ImagesTr/10000/IMG0012.dcm', 'DCM/Task1/ImagesTr/10000/IMG0013.dcm', 'DCM/Task1/ImagesTr/10000/IMG0014.dcm', 'DCM/Task1/ImagesTr/10000/IMG0015.dcm', 'DCM/Task1/ImagesTr/10000/IMG0016.dcm', 'DCM/Task1/ImagesTr/10000/IMG0017.dcm', 'DCM/Task1/ImagesTr/10000/IMG0018.dcm', 'DCM/Task1/ImagesTr/10000/IMG0019.dcm', 'DCM/Task1/ImagesTr/10000/IMG0020.dcm', 'DCM/Task1/ImagesTr/10000/IMG0021.dcm', 'DCM/Task1/ImagesTr/10000/IMG0022.dcm', 'DCM/Task1/ImagesTr/10000/IMG0023.dcm', 'DCM/Task1/ImagesTr/10000/IMG0024.dcm', 'DCM/Task1/ImagesTr/10000/IMG0025.dcm', 'DCM/Task1/ImagesTr/10000/IMG0026.dcm', 'DCM/Task1/ImagesTr/10000/IMG0027.dcm', 'DCM/Task1/ImagesTr/10000/IMG0028.dcm', 'DCM/Task1/ImagesTr/10000/IMG0029.dcm', 'DCM/Task1/ImagesTr/10000/IMG0030.dcm', 'DCM/Task1/ImagesTr/10000/IMG0031.dcm', 'DCM/Task1/ImagesTr/10000/IMG0032.dcm', 'DCM/Task1/ImagesTr/10000/IMG0033.dcm', 'DCM/Task1/ImagesTr/10000/IMG0034.dcm', 'DCM/Task1/ImagesTr/10000/IMG0035.dcm', 'DCM/Task1/ImagesTr/10000/IMG0036.dcm', 'DCM/Task1/ImagesTr/10000/IMG0037.dcm', 'DCM/Task1/ImagesTr/10000/IMG0038.dcm', 'DCM/Task1/ImagesTr/10000/IMG0039.dcm', 'DCM/Task1/ImagesTr/10000/IMG0040.dcm', 'DCM/Task1/ImagesTr/10000/IMG0041.dcm', 'DCM/Task1/ImagesTr/10000/IMG0042.dcm', 'DCM/Task1/ImagesTr/10000/IMG0043.dcm', 'DCM/Task1/ImagesTr/10000/IMG0044.dcm', 'DCM/Task1/ImagesTr/10000/IMG0045.dcm', 'DCM/Task1/ImagesTr/10000/IMG0046.dcm', 'DCM/Task1/ImagesTr/10000/IMG0047.dcm', 'DCM/Task1/ImagesTr/10000/IMG0048.dcm', 'DCM/Task1/ImagesTr/10000/IMG0049.dcm', 'DCM/Task1/ImagesTr/10000/IMG0050.dcm', 'DCM/Task1/ImagesTr/10000/IMG0051.dcm', 'DCM/Task1/ImagesTr/10000/IMG0052.dcm', 'DCM/Task1/ImagesTr/10000/IMG0053.dcm', 'DCM/Task1/ImagesTr/10000/IMG0054.dcm', 'DCM/Task1/ImagesTr/10000/IMG0055.dcm', 'DCM/Task1/ImagesTr/10000/IMG0056.dcm', 'DCM/Task1/ImagesTr/10000/IMG0057.dcm', 'DCM/Task1/ImagesTr/10000/IMG0058.dcm', 'DCM/Task1/ImagesTr/10000/IMG0059.dcm', 'DCM/Task1/ImagesTr/10000/IMG0060.dcm', 'DCM/Task1/ImagesTr/10000/IMG0061.dcm', 'DCM/Task1/ImagesTr/10000/IMG0062.dcm', 'DCM/Task1/ImagesTr/10000/IMG0063.dcm', 'DCM/Task1/ImagesTr/10000/IMG0064.dcm', 'DCM/Task1/ImagesTr/10000/IMG0065.dcm', 'DCM/Task1/ImagesTr/10000/IMG0066.dcm', 'DCM/Task1/ImagesTr/10000/IMG0067.dcm', 'DCM/Task1/ImagesTr/10000/IMG0068.dcm', 'DCM/Task1/ImagesTr/10000/IMG0069.dcm', 'DCM/Task1/ImagesTr/10000/IMG0070.dcm', 'DCM/Task1/ImagesTr/10000/IMG0071.dcm', 'DCM/Task1/ImagesTr/10000/IMG0072.dcm', 'DCM/Task1/ImagesTr/10001/IMG0001.dcm', 'DCM/Task1/ImagesTr/10001/IMG0002.dcm', 'DCM/Task1/ImagesTr/10001/IMG0003.dcm', 'DCM/Task1/ImagesTr/10001/IMG0004.dcm', 'DCM/Task1/ImagesTr/10001/IMG0005.dcm', 'DCM/Task1/ImagesTr/10001/IMG0006.dcm', 'DCM/Task1/ImagesTr/10001/IMG0007.dcm', 'DCM/Task1/ImagesTr/10001/IMG0008.dcm', 'DCM/Task1/ImagesTr/10001/IMG0009.dcm', 'DCM/Task1/ImagesTr/10001/IMG0010.dcm', 'DCM/Task1/ImagesTr/10001/IMG0011.dcm', 'DCM/Task1/ImagesTr/10001/IMG0012.dcm', 'DCM/Task1/ImagesTr/10001/IMG0013.dcm', 'DCM/Task1/ImagesTr/10001/IMG0014.dcm', 'DCM/Task1/ImagesTr/10001/IMG0015.dcm', 'DCM/Task1/ImagesTr/10001/IMG0016.dcm', 'DCM/Task1/ImagesTr/10001/IMG0017.dcm', 'DCM/Task1/ImagesTr/10001/IMG0018.dcm', 'DCM/Task1/ImagesTr/10001/IMG0019.dcm', 'DCM/Task1/ImagesTr/10001/IMG0020.dcm', 'DCM/Task1/ImagesTr/10001/IMG0021.dcm', 'DCM/Task1/ImagesTr/10001/IMG0022.dcm', 'DCM/Task1/ImagesTr/10001/IMG0023.dcm', 'DCM/Task1/ImagesTr/10001/IMG0024.dcm', 'DCM/Task1/ImagesTr/10001/IMG0025.dcm', 'DCM/Task1/ImagesTr/10001/IMG0026.dcm', 'DCM/Task1/ImagesTr/10001/IMG0027.dcm', 'DCM/Task1/ImagesTr/10001/IMG0028.dcm', 'DCM/Task1/ImagesTr/10001/IMG0029.dcm', 'DCM/Task1/ImagesTr/10001/IMG0030.dcm', 'DCM/Task1/ImagesTr/10001/IMG0031.dcm', 'DCM/Task1/ImagesTr/10001/IMG0032.dcm', 'DCM/Task1/ImagesTr/10001/IMG0033.dcm', 'DCM/Task1/ImagesTr/10001/IMG0034.dcm', 'DCM/Task1/ImagesTr/10001/IMG0035.dcm', 'DCM/Task1/ImagesTr/10001/IMG0036.dcm', 'DCM/Task1/ImagesTr/10001/IMG0037.dcm', 'DCM/Task1/ImagesTr/10001/IMG0038.dcm', 'DCM/Task1/ImagesTr/10001/IMG0039.dcm', 'DCM/Task1/ImagesTr/10001/IMG0040.dcm', 'DCM/Task1/ImagesTr/10001/IMG0041.dcm', 'DCM/Task1/ImagesTr/10001/IMG0042.dcm', 'DCM/Task1/ImagesTr/10001/IMG0043.dcm', 'DCM/Task1/ImagesTr/10001/IMG0044.dcm', 'DCM/Task1/ImagesTr/10001/IMG0045.dcm', 'DCM/Task1/ImagesTr/10001/IMG0046.dcm', 'DCM/Task1/ImagesTr/10001/IMG0047.dcm', 'DCM/Task1/ImagesTr/10001/IMG0048.dcm', 'DCM/Task1/ImagesTr/10001/IMG0049.dcm', 'DCM/Task1/ImagesTr/10001/IMG0050.dcm', 'DCM/Task1/ImagesTr/10001/IMG0051.dcm', 'DCM/Task1/ImagesTr/10001/IMG0052.dcm', 'DCM/Task1/ImagesTr/10001/IMG0053.dcm', 'DCM/Task1/ImagesTr/10001/IMG0054.dcm', 'DCM/Task1/ImagesTr/10001/IMG0055.dcm', 'DCM/Task1/ImagesTr/10001/IMG0056.dcm', 'DCM/Task1/ImagesTr/10001/IMG0057.dcm', 'DCM/Task1/ImagesTr/10001/IMG0058.dcm', 'DCM/Task1/ImagesTr/10001/IMG0059.dcm', 'DCM/Task1/ImagesTr/10001/IMG0060.dcm', 'DCM/Task1/ImagesTr/10001/IMG0061.dcm', 'DCM/Task1/ImagesTr/10001/IMG0062.dcm', 'DCM/Task1/ImagesTr/10001/IMG0063.dcm', 'DCM/Task1/ImagesTr/10001/IMG0064.dcm', 'DCM/Task1/ImagesTr/10001/IMG0065.dcm', 'DCM/Task1/ImagesTr/10001/IMG0066.dcm', 'DCM/Task1/ImagesTr/10001/IMG0067.dcm', 'DCM/Task1/ImagesTr/10001/IMG0068.dcm', 'DCM/Task1/ImagesTr/10001/IMG0069.dcm', 'DCM/Task1/ImagesTr/10001/IMG0070.dcm', 'DCM/Task1/ImagesTr/10001/IMG0071.dcm', 'DCM/Task1/ImagesTr/10001/IMG0072.dcm', 'DCM/Task1/ImagesTr/10002/IMG0001.dcm', 'DCM/Task1/ImagesTr/10002/IMG0002.dcm', 'DCM/Task1/ImagesTr/10002/IMG0003.dcm', 'DCM/Task1/ImagesTr/10002/IMG0004.dcm', 'DCM/Task1/ImagesTr/10002/IMG0005.dcm', 'DCM/Task1/ImagesTr/10002/IMG0006.dcm']\n",
            "Sample mask : ['DCM/Task1/LabelsTr/10000/IMG0001.dcm', 'DCM/Task1/LabelsTr/10000/IMG0002.dcm', 'DCM/Task1/LabelsTr/10000/IMG0003.dcm', 'DCM/Task1/LabelsTr/10000/IMG0004.dcm', 'DCM/Task1/LabelsTr/10000/IMG0005.dcm', 'DCM/Task1/LabelsTr/10000/IMG0006.dcm', 'DCM/Task1/LabelsTr/10000/IMG0007.dcm', 'DCM/Task1/LabelsTr/10000/IMG0008.dcm', 'DCM/Task1/LabelsTr/10000/IMG0009.dcm', 'DCM/Task1/LabelsTr/10000/IMG0010.dcm', 'DCM/Task1/LabelsTr/10000/IMG0011.dcm', 'DCM/Task1/LabelsTr/10000/IMG0012.dcm', 'DCM/Task1/LabelsTr/10000/IMG0013.dcm', 'DCM/Task1/LabelsTr/10000/IMG0014.dcm', 'DCM/Task1/LabelsTr/10000/IMG0015.dcm', 'DCM/Task1/LabelsTr/10000/IMG0016.dcm', 'DCM/Task1/LabelsTr/10000/IMG0017.dcm', 'DCM/Task1/LabelsTr/10000/IMG0018.dcm', 'DCM/Task1/LabelsTr/10000/IMG0019.dcm', 'DCM/Task1/LabelsTr/10000/IMG0020.dcm', 'DCM/Task1/LabelsTr/10000/IMG0021.dcm', 'DCM/Task1/LabelsTr/10000/IMG0022.dcm', 'DCM/Task1/LabelsTr/10000/IMG0023.dcm', 'DCM/Task1/LabelsTr/10000/IMG0024.dcm', 'DCM/Task1/LabelsTr/10000/IMG0025.dcm', 'DCM/Task1/LabelsTr/10000/IMG0026.dcm', 'DCM/Task1/LabelsTr/10000/IMG0027.dcm', 'DCM/Task1/LabelsTr/10000/IMG0028.dcm', 'DCM/Task1/LabelsTr/10000/IMG0029.dcm', 'DCM/Task1/LabelsTr/10000/IMG0030.dcm', 'DCM/Task1/LabelsTr/10000/IMG0031.dcm', 'DCM/Task1/LabelsTr/10000/IMG0032.dcm', 'DCM/Task1/LabelsTr/10000/IMG0033.dcm', 'DCM/Task1/LabelsTr/10000/IMG0034.dcm', 'DCM/Task1/LabelsTr/10000/IMG0035.dcm', 'DCM/Task1/LabelsTr/10000/IMG0036.dcm', 'DCM/Task1/LabelsTr/10000/IMG0037.dcm', 'DCM/Task1/LabelsTr/10000/IMG0038.dcm', 'DCM/Task1/LabelsTr/10000/IMG0039.dcm', 'DCM/Task1/LabelsTr/10000/IMG0040.dcm', 'DCM/Task1/LabelsTr/10000/IMG0041.dcm', 'DCM/Task1/LabelsTr/10000/IMG0042.dcm', 'DCM/Task1/LabelsTr/10000/IMG0043.dcm', 'DCM/Task1/LabelsTr/10000/IMG0044.dcm', 'DCM/Task1/LabelsTr/10000/IMG0045.dcm', 'DCM/Task1/LabelsTr/10000/IMG0046.dcm', 'DCM/Task1/LabelsTr/10000/IMG0047.dcm', 'DCM/Task1/LabelsTr/10000/IMG0048.dcm', 'DCM/Task1/LabelsTr/10000/IMG0049.dcm', 'DCM/Task1/LabelsTr/10000/IMG0050.dcm', 'DCM/Task1/LabelsTr/10000/IMG0051.dcm', 'DCM/Task1/LabelsTr/10000/IMG0052.dcm', 'DCM/Task1/LabelsTr/10000/IMG0053.dcm', 'DCM/Task1/LabelsTr/10000/IMG0054.dcm', 'DCM/Task1/LabelsTr/10000/IMG0055.dcm', 'DCM/Task1/LabelsTr/10000/IMG0056.dcm', 'DCM/Task1/LabelsTr/10000/IMG0057.dcm', 'DCM/Task1/LabelsTr/10000/IMG0058.dcm', 'DCM/Task1/LabelsTr/10000/IMG0059.dcm', 'DCM/Task1/LabelsTr/10000/IMG0060.dcm', 'DCM/Task1/LabelsTr/10000/IMG0061.dcm', 'DCM/Task1/LabelsTr/10000/IMG0062.dcm', 'DCM/Task1/LabelsTr/10000/IMG0063.dcm', 'DCM/Task1/LabelsTr/10000/IMG0064.dcm', 'DCM/Task1/LabelsTr/10000/IMG0065.dcm', 'DCM/Task1/LabelsTr/10000/IMG0066.dcm', 'DCM/Task1/LabelsTr/10000/IMG0067.dcm', 'DCM/Task1/LabelsTr/10000/IMG0068.dcm', 'DCM/Task1/LabelsTr/10000/IMG0069.dcm', 'DCM/Task1/LabelsTr/10000/IMG0070.dcm', 'DCM/Task1/LabelsTr/10000/IMG0071.dcm', 'DCM/Task1/LabelsTr/10000/IMG0072.dcm', 'DCM/Task1/LabelsTr/10001/IMG0001.dcm', 'DCM/Task1/LabelsTr/10001/IMG0002.dcm', 'DCM/Task1/LabelsTr/10001/IMG0003.dcm', 'DCM/Task1/LabelsTr/10001/IMG0004.dcm', 'DCM/Task1/LabelsTr/10001/IMG0005.dcm', 'DCM/Task1/LabelsTr/10001/IMG0006.dcm', 'DCM/Task1/LabelsTr/10001/IMG0007.dcm', 'DCM/Task1/LabelsTr/10001/IMG0008.dcm', 'DCM/Task1/LabelsTr/10001/IMG0009.dcm', 'DCM/Task1/LabelsTr/10001/IMG0010.dcm', 'DCM/Task1/LabelsTr/10001/IMG0011.dcm', 'DCM/Task1/LabelsTr/10001/IMG0012.dcm', 'DCM/Task1/LabelsTr/10001/IMG0013.dcm', 'DCM/Task1/LabelsTr/10001/IMG0014.dcm', 'DCM/Task1/LabelsTr/10001/IMG0015.dcm', 'DCM/Task1/LabelsTr/10001/IMG0016.dcm', 'DCM/Task1/LabelsTr/10001/IMG0017.dcm', 'DCM/Task1/LabelsTr/10001/IMG0018.dcm', 'DCM/Task1/LabelsTr/10001/IMG0019.dcm', 'DCM/Task1/LabelsTr/10001/IMG0020.dcm', 'DCM/Task1/LabelsTr/10001/IMG0021.dcm', 'DCM/Task1/LabelsTr/10001/IMG0022.dcm', 'DCM/Task1/LabelsTr/10001/IMG0023.dcm', 'DCM/Task1/LabelsTr/10001/IMG0024.dcm', 'DCM/Task1/LabelsTr/10001/IMG0025.dcm', 'DCM/Task1/LabelsTr/10001/IMG0026.dcm', 'DCM/Task1/LabelsTr/10001/IMG0027.dcm', 'DCM/Task1/LabelsTr/10001/IMG0028.dcm', 'DCM/Task1/LabelsTr/10001/IMG0029.dcm', 'DCM/Task1/LabelsTr/10001/IMG0030.dcm', 'DCM/Task1/LabelsTr/10001/IMG0031.dcm', 'DCM/Task1/LabelsTr/10001/IMG0032.dcm', 'DCM/Task1/LabelsTr/10001/IMG0033.dcm', 'DCM/Task1/LabelsTr/10001/IMG0034.dcm', 'DCM/Task1/LabelsTr/10001/IMG0035.dcm', 'DCM/Task1/LabelsTr/10001/IMG0036.dcm', 'DCM/Task1/LabelsTr/10001/IMG0037.dcm', 'DCM/Task1/LabelsTr/10001/IMG0038.dcm', 'DCM/Task1/LabelsTr/10001/IMG0039.dcm', 'DCM/Task1/LabelsTr/10001/IMG0040.dcm', 'DCM/Task1/LabelsTr/10001/IMG0041.dcm', 'DCM/Task1/LabelsTr/10001/IMG0042.dcm', 'DCM/Task1/LabelsTr/10001/IMG0043.dcm', 'DCM/Task1/LabelsTr/10001/IMG0044.dcm', 'DCM/Task1/LabelsTr/10001/IMG0045.dcm', 'DCM/Task1/LabelsTr/10001/IMG0046.dcm', 'DCM/Task1/LabelsTr/10001/IMG0047.dcm', 'DCM/Task1/LabelsTr/10001/IMG0048.dcm', 'DCM/Task1/LabelsTr/10001/IMG0049.dcm', 'DCM/Task1/LabelsTr/10001/IMG0050.dcm', 'DCM/Task1/LabelsTr/10001/IMG0051.dcm', 'DCM/Task1/LabelsTr/10001/IMG0052.dcm', 'DCM/Task1/LabelsTr/10001/IMG0053.dcm', 'DCM/Task1/LabelsTr/10001/IMG0054.dcm', 'DCM/Task1/LabelsTr/10001/IMG0055.dcm', 'DCM/Task1/LabelsTr/10001/IMG0056.dcm', 'DCM/Task1/LabelsTr/10001/IMG0057.dcm', 'DCM/Task1/LabelsTr/10001/IMG0058.dcm', 'DCM/Task1/LabelsTr/10001/IMG0059.dcm', 'DCM/Task1/LabelsTr/10001/IMG0060.dcm', 'DCM/Task1/LabelsTr/10001/IMG0061.dcm', 'DCM/Task1/LabelsTr/10001/IMG0062.dcm', 'DCM/Task1/LabelsTr/10001/IMG0063.dcm', 'DCM/Task1/LabelsTr/10001/IMG0064.dcm', 'DCM/Task1/LabelsTr/10001/IMG0065.dcm', 'DCM/Task1/LabelsTr/10001/IMG0066.dcm', 'DCM/Task1/LabelsTr/10001/IMG0067.dcm', 'DCM/Task1/LabelsTr/10001/IMG0068.dcm', 'DCM/Task1/LabelsTr/10001/IMG0069.dcm', 'DCM/Task1/LabelsTr/10001/IMG0070.dcm', 'DCM/Task1/LabelsTr/10001/IMG0071.dcm', 'DCM/Task1/LabelsTr/10001/IMG0072.dcm', 'DCM/Task1/LabelsTr/10002/IMG0001.dcm', 'DCM/Task1/LabelsTr/10002/IMG0002.dcm', 'DCM/Task1/LabelsTr/10002/IMG0003.dcm', 'DCM/Task1/LabelsTr/10002/IMG0004.dcm', 'DCM/Task1/LabelsTr/10002/IMG0005.dcm', 'DCM/Task1/LabelsTr/10002/IMG0006.dcm']\n"
          ]
        }
      ]
    }
  ]
}